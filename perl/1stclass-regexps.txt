Regular expressions can be used as "first-class-citizens"
(i.e. created and pre-compiled at run-time):

  DB<1> $pat='ATH.*?in';

  DB<7> $re=qr/$pat/ r

  DB<8> x $re
0  (?-xism:ATH.*?in)
   -> qr/(?-xism:ATH.*?in)/
  DB<9> x ref $re
0  'Regexp'
  DB<10> open(F,"</home/olaf/.bash_profile")

  DB<11> x grep /$re/, <F>
0  'PATH=.:$HOME/bin:$PATH:/usr/local/ocs-2.3f.beta/bin
'
  DB<12> 

qr// precopiles its argument as a regular expression. See perlop for
details.

Unfortunately, the options strings apparently has to be fixed at
compile time:

  DB<1> x $pat = 'ath.*?in'
0  'ath.*?in'
  DB<2> x $opts = 'i'
0  'i'
  DB<3> x $regexp=qr{$pat}$opts
Scalar found where operator expected at (eval 14)[/usr/share/perl/5.8/perl5db.pl:619] line 2, near "qr{$pat}$opts"
        eval '($@, $!, $^E, $,, $/, $\\, $^W) = @saved;package main; $^D = $^D | $DB::db_stop;
  $regexp=qr{$pat}$opts;

;' called at /usr/share/perl/5.8/perl5db.pl line 619
        DB::eval called at /usr/share/perl/5.8/perl5db.pl line 3320
        DB::DB called at -e line 1
syntax error at (eval 14)[/usr/share/perl/5.8/perl5db.pl:619] line 2, near "qr{$pat}$opts"
  DB<4> x $regexp=qr{$pat}i    
0  (?i-xsm:ath.*?in)
   -> qr/(?i-xsm:ath.*?in)/
  DB<5> 


  DB<9> x grep /$regexp/$opts, <F>
Scalar found where operator expected at (eval 31)[/usr/share/perl/5.8/perl5db.pl:619] line 2, near "/$regexp/$opts"
        eval '($@, $!, $^E, $,, $/, $\\, $^W) = @saved;package main; $^D = $^D | $DB::db_stop;
  grep /$regexp/$opts, <F>;

;' called at /usr/share/perl/5.8/perl5db.pl line 619
        DB::eval called at /usr/share/perl/5.8/perl5db.pl line 3320
        DB::DB called at -e line 1
        (Missing operator before $opts?)
        eval '($@, $!, $^E, $,, $/, $\\, $^W) = @saved;package main; $^D = $^D | $DB::db_stop;
  grep /$regexp/$opts, <F>;

;' called at /usr/share/perl/5.8/perl5db.pl line 619
        DB::eval called at /usr/share/perl/5.8/perl5db.pl line 3320
        DB::DB called at -e line 1
syntax error at (eval 31)[/usr/share/perl/5.8/perl5db.pl:619] line 2, near "/$regexp/$opts"
  DB<10> 

  DB<10> 

  DB<10> x grep /$regexp/, <F>     
  empty array
  DB<11> 
